stages:
  - test
  - build
  - deploy stage

variables:
  DOCKER_IMAGE_TAG: $CI_REGISTRY_IMAGE/employee-image:$CI_COMMIT_REF_SLUG
  HEROKU_STAGING_URL: registry.heroku.com/emportal-stage.herokuapp.com/web

lint_test:
  stage: test
  image: python:3.8.0-slim
  before_script:
    - pip install flake8-html
  script:
    - flake8 --format=html --htmldir=flake_reports/
  artifacts:
    when: always
    paths:
      - "flake_reports/"
    expire_in: "30 days"

smoke_test:
  stage: test
  image: python:3.8.0-slim
  before_script:
    - pip install pytest-html
    - pip install -r requirements.txt
  script:
    - pytest --html=pytest_reports/pytest-reports.html
  artifacts:
    when: always
    paths:
      - pytest_reports/
    expire_in: "30 days"

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE_TAG .
    - docker images
    - docker push $DOCKER_IMAGE_TAG

staging:
  image: docker:latest
  stage: deploy stage
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
  script:
    - docker pull $DOCKER_IMAGE_TAG
    - docker tag $DOKCER_IMAGE_TAG $HEROKU_STAGING_URL
    - docker login -u _ -p $HEROKU_AUTH_TOKEN registry.heroku.com
    - docker push $HEROKU_STAGING_URL